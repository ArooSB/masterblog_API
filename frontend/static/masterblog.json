{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.0.0"
  },
  "servers": [{ "url": "http://localhost:5001" }],
  "tags": [{ "name": "Post", "description": "Post API - CRUD" }],
  "paths": {
    "/api/v1/posts": {
      "get": {
        "summary": "Returns all posts with optional sorting and pagination",
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Field to sort by (title or content)",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Sort direction (asc or desc)",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of posts per page",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Add a new post",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "description": "Post object to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/v1/posts/{id}": {
      "delete": {
        "summary": "Delete a post by ID",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the post to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update a post by ID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the post to update",
            "required": true,
            "type": "integer"
          },
          {
            "name": "post",
            "in": "body",
            "description": "Post object with updated information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/v1/posts/search": {
      "get": {
        "summary": "Search posts by title or content",
        "produces": ["application/json"],
        "tags": ["Post"],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Title query for searching",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Content query for searching",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "Register a new user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "summary": "User login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User"],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "title": {
          "type": "string",
          "example": "Sample Title"
        },
        "content": {
          "type": "string",
          "example": "Sample Content"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "user1"
        },
        "password": {
          "type": "string",
          "example": "pass1"
        }
      }
    },
    "Credentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "user1"
        },
        "password": {
          "type": "string",
          "example": "pass1"
        }
      }
    }
  }
}
